let while = macro(cond, func) {
    quote(__while(#{
         unquote(cond)
    }, unquote(func)) )
}

let for = macro(init, cond, aft, func) {
    quote(
        #{
            unquote(init)
            __loop(#{
                if !unquote(cond) {
                    return break
                }
                let result = unquote(func)()
                unquote(aft)
                return result
            })
        }()
    )
}

let forEach = macro(list, func) {
    quote(
        #{
           let iter = unquote(list).iter()
           let next = null
           __while(#{
                (next = iter.next()) != break
           }) #{
                unquote(func)(next)
           }
        }()
    )
}

let ifnot = macro(cond, consq, alt) {
    quote(if !unquote(cond) {
        unquote(consq)()
    } else {
        unquote(alt)()
    })
}