Array.prototype.forEach = fn(func) {
     __loop(fn(t) {
        func(this[t])
    }, this.length)
    return null
}

Array.prototype.map = fn(func) {
    let newList = []

}

// returns a new hash/array base on a forEach loop
let map = fn (list, func) {
    if typeof(list) == Array {
        let newList = []
        forEach(list) fn(e) {
            let result = func(e)
            append(newList, result)
        }
        return newList
    } else if typeof(list) == Hash {
        let newHash = {}
        forEach(list) fn(k, v) {
            let result = func(k, v)
            __set(newHash, k, result)
        }
        return newHash
    }
}

// whether an array contains an item
let contains = fn(list, item) {
    if typeof(list) == Array {
        let cont = false
        forEach(list) fn(e) {
            if e == item {
                cont = true
            }
        }
        return cont
    }
}