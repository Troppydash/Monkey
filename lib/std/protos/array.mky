// Array forEach
Array.prototype.forEach = fn(func) {
     __loop(fn(t) {
        func(this[t])
    }, this.length)
    return null
}

// Array map
Array.prototype.map = fn(func) {
    let newList = []
    this.forEach() fn(item) {
        newList.push(func(item))
    }
    return newList
}

// Array index of
Array.prototype.indexOf = fn(item) {
    let result = -1
    let i
    for (i = 0, i < this.length, i = i + 1) #{
        if this[i] == item {
            result = i
            return break
        }
    }
    return result
}

// Array contains
Array.prototype.contains = fn(item) {
    return this.indexOf(item) != -1
}

Array.prototype.iter = fn() {
    let index = 0
    let arr = this
    return {
        "next": fn() {
            if index >= arr.length {
                return break
            }
            let value = arr[index]
            index = index + 1
            return value
        }
    }
}